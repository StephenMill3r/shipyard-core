// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "forge-std/Script.sol";

import "../src/dynamic-traits/CryptoDadsOnchain.sol";

contract DefineTraits is Script {
    // Address of the deployed TraitsManagerV2 contract
    address nftContractAddress = 0x80Fae9a481c2D61a5e50B7F9BFef4E27A09D87cd;  // Replace with actual deployed address

    // Hardcoded arrays for traitId, key, and value as bytes32
    uint256[] traitIds = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283];
    bytes32[] keys = [bytes32("Vibes"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Skin"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Mouth"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hat"),bytes32("Hair Color"),bytes32("Hair Color"),bytes32("Hair Color"),bytes32("Hair Color"),bytes32("Hair Color"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Neck"),bytes32("Neck"),bytes32("Neck"),bytes32("Neck"),bytes32("Jewelry"),bytes32("Jewelry"),bytes32("Jewelry"),bytes32("Jewelry"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Holding"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Accessory"),bytes32("Dad's Top Pick"),bytes32("Vibes"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Background"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Facial Hair"),bytes32("Eyes"),bytes32("Eyes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Clothes"),bytes32("Hat"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Hair Style"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Eyewear"),bytes32("Holding")];
    bytes32[] values = [bytes32("Old School"),bytes32("Pool Day Blue"),bytes32("Lawn Green"),bytes32("Lime Green"),bytes32("Coral"),bytes32("Purple"),bytes32("Sky Blurple"),bytes32("ToolBox Yellow"),bytes32("Steel"),bytes32("Tobacco"),bytes32("Woodgrain"),bytes32("Metaverse"),bytes32("STONKS"),bytes32("CryptoDads Signature"),bytes32("Everything Is Fine"),bytes32("Space"),bytes32("Exodus"),bytes32("Alien Abduction"),bytes32("Diamond Bliss"),bytes32("Spooky Night"),bytes32("OG Peach"),bytes32("Golden Swirl"),bytes32("Light"),bytes32("Dark"),bytes32("Tatted"),bytes32("Medium"),bytes32("Sunburnt"),bytes32("Alien"),bytes32("Golden"),bytes32("Beer Belly"),bytes32("Diamond"),bytes32("Stitched"),bytes32("OG Skin"),bytes32("Shredded"),bytes32("Brown Bearded"),bytes32("Black Gentleman Stache"),bytes32("Red Bearded"),bytes32("Blonde Bearded"),bytes32("Black Bearded"),bytes32("Blonde GOATee"),bytes32("Grey Bearded"),bytes32("Blonde Soulpatch"),bytes32("Five O'Clock Shadow"),bytes32("Red Gentleman Stache"),bytes32("Long Brown Beard"),bytes32("Brown Soulpatch"),bytes32("Brown Gentleman Stache"),bytes32("Red Soulpatch"),bytes32("Blonde Gentleman Stache"),bytes32("Grey Soulpatch"),bytes32("Black GOATee"),bytes32("Grey GOATee"),bytes32("Grey Gentleman Stache"),bytes32("Brown GOATee"),bytes32("Long Blonde Beard"),bytes32("Long Grey Beard"),bytes32("Scruff"),bytes32("Black Soulpatch"),bytes32("Rainbow Beard"),bytes32("Long Black Beard"),bytes32("Red Wyatt"),bytes32("Long Red Beard"),bytes32("Red GOATee"),bytes32("Golden Beard"),bytes32("Farmer"),bytes32("Braces"),bytes32("Buck"),bytes32("Cigar"),bytes32("Tobacco Pipe"),bytes32("Smurkio"),bytes32("Vampire"),bytes32("Rainbow Grillz"),bytes32("Cigarette"),bytes32("Chip Skylark"),bytes32("WOW"),bytes32("Sad Dad"),bytes32("Underbite"),bytes32("Golden Tooth Pick"),bytes32("Gapped"),bytes32("Gold Grill"),bytes32("Robot"),bytes32("Slime"),bytes32("Drooling"),bytes32("Brainwashed"),bytes32("Diamond Grin"),bytes32("OG Grin"),bytes32("Shiny Smile"),bytes32("Disoriented"),bytes32("Blanked"),bytes32("Rolled Eyes"),bytes32("Conflict Maxi"),bytes32("Bitcoin Maxi"),bytes32("Ape Tears"),bytes32("Arghh!"),bytes32("Trippin'"),bytes32("Bag Holder"),bytes32("Eastern"),bytes32("Confirmed Bot"),bytes32("Normal"),bytes32("Blue"),bytes32("Cave Vision"),bytes32("Ghost"),bytes32("Yellow Cat Eyes"),bytes32("Woke AF"),bytes32("Stoned"),bytes32("Laser"),bytes32("Cyborg"),bytes32("Cookin"),bytes32("Demon Cat Eyes"),bytes32("Hypnotized"),bytes32("VVS Diamonds"),bytes32("Dad Glare"),bytes32("OG Eyes"),bytes32("Wink"),bytes32("Military"),bytes32("Frat Boy"),bytes32("Hoodie"),bytes32("Warehouse Manager"),bytes32("Degenerate"),bytes32("Lumberjack"),bytes32("Turtleneck"),bytes32("Leather Jacket"),bytes32("Life Vest"),bytes32("Tank Top"),bytes32("Football Jersey"),bytes32("Uncle Rico"),bytes32("Striped Sweater"),bytes32("Hedge Fund Vest"),bytes32("Pocket Tee"),bytes32("Pocket Tee With Cigs"),bytes32("Button Up Shirt"),bytes32("Denim Jacket"),bytes32("Basketball Jersey"),bytes32("Whale Suit & Bowtie"),bytes32("Unbuttoned Shirt"),bytes32("BBQ Apron"),bytes32("Whale Suit & Tie"),bytes32("HODLAGER T"),bytes32("#1 Dad Tee"),bytes32("#FreeBlue Tee"),bytes32("Semper Fidelis"),bytes32("Crackerjacks"),bytes32("Santa"),bytes32("Night Cap"),bytes32("Hard Headed"),bytes32("Winter Earmuffs"),bytes32("Viking"),bytes32("Sunny Boys"),bytes32("Aviator"),bytes32("Ninja"),bytes32("Plumber Cap"),bytes32("Black Hair & Tinfoil"),bytes32("Brown Hair & Beanie"),bytes32("Black Hair & Antlers"),bytes32("Grey Hair & Beanie"),bytes32("Halo"),bytes32("Red Hair & #1 Dad"),bytes32("Gem Finder"),bytes32("Red Hair & Pre-game Hat"),bytes32("Blonde Hair & Beanie"),bytes32("Blonde Hair & #1 Dad"),bytes32("Black Hair & Beanie"),bytes32("Brown Hair & Tinfoil"),bytes32("Rock of Love"),bytes32("Grey Hair & Antlers"),bytes32("Grey Hair & Tinfoil"),bytes32("Doge Maxi"),bytes32("Black Hair & Pre-game Hat"),bytes32("Biker Helmet"),bytes32("Red Hair & Beanie"),bytes32("Red Hair & Antlers"),bytes32("Blonde Hair & Pre-game Hat"),bytes32("Trench Helmet"),bytes32("Red Hair & Tinfoil"),bytes32("Brown Hair & Antlers"),bytes32("Brown Hair & Pre-game Hat"),bytes32("Blonde Hair & Tinfoil"),bytes32("Grey Hair & Pre-game Hat"),bytes32("Blonde Hair & Antlers"),bytes32("Catfish"),bytes32("Black Hair & #1 Dad"),bytes32("Grey Hair & #1 Dad"),bytes32("Brown Hair & #1 Dad"),bytes32("Black"),bytes32("Brown"),bytes32("Grey"),bytes32("Red"),bytes32("Blonde"),bytes32("Devil Horns"),bytes32("Ponytail"),bytes32("Manbun"),bytes32("Mullet"),bytes32("Curly Long"),bytes32("Mohawk"),bytes32("Curly"),bytes32("Bowl Cut"),bytes32("Long Centerpart"),bytes32("Sweeped"),bytes32("Half Braided"),bytes32("Braids"),bytes32("Receding"),bytes32("Bed Head"),bytes32("Fade"),bytes32("Long Hair"),bytes32("Flat Top"),bytes32("Gym Hair"),bytes32("Harry Plotter"),bytes32("Fast Glasses"),bytes32("Monocle"),bytes32("3D Glasses"),bytes32("Hippie Glasses"),bytes32("Reading Glasses"),bytes32("Poker"),bytes32("Swimming Goggles"),bytes32("VR"),bytes32("Night Vision"),bytes32("Transitions"),bytes32("HODL Chain"),bytes32("Gold Chain"),bytes32("Bitcoin Maxi Scarf"),bytes32("Coach Whistle"),bytes32("Triple Loop Earring"),bytes32("Loop Earring"),bytes32("Diamond Earring"),bytes32("Racing EarPlugs"),bytes32("Fishing Day"),bytes32("Sammich"),bytes32("On The Rocks"),bytes32("Hunter"),bytes32("Golden Spatula"),bytes32("Milk"),bytes32("Football"),bytes32("Harmonica"),bytes32("Ready To Rock N' Roll"),bytes32("2 Clickz"),bytes32("Heavy-Hitter"),bytes32("Beer"),bytes32("Handyman"),bytes32("Rusty Burger Flipper"),bytes32("DadSaber"),bytes32("Sunburnt Elf Ear"),bytes32("Big Stepper"),bytes32("Dark Elf Ear"),bytes32("Medium Elf Ear"),bytes32("Mask"),bytes32("DadX Spacesuit"),bytes32("Doge Carrier"),bytes32("Bluetooth"),bytes32("Light Elf Ear"),bytes32("TRUE"),bytes32("Dad-O-Mite"),bytes32("Man Cave"),bytes32("Light My Fire"),bytes32("Dads After Dark"),bytes32("Rampage"),bytes32("Grey Fu Manchu"),bytes32("Black Wyatt"),bytes32("Grey Wyatt"),bytes32("Black Fu Manchu"),bytes32("Blonde Fu Manchu"),bytes32("Brown Fu Manchu"),bytes32("Red Fu Manchu"),bytes32("Brown Wyatt"),bytes32("Blonde Wyatt"),bytes32("Chocolate"),bytes32("Green With Envy"),bytes32("NYC23 Tee"),bytes32("Grilldon Ramsay"),bytes32("Boogie Nights"),bytes32("Dadjira"),bytes32("Pump Gang"),bytes32("We Are Riding"),bytes32("Jester"),bytes32("Buckaroo"),bytes32("King of Rock"),bytes32("Dr. J"),bytes32("Kid 'n Play"),bytes32("Archetype"),bytes32("Gentle Tornado"),bytes32("Wingman"),bytes32("Sunrise"),bytes32("NYC23 Shades"),bytes32("Golden 2 Clickz")];

    function run() external {
        // Load the private key from environment
        uint256 deployerPrivateKey = vm.envUint("MY_PK_BE_CAREFUL");

        // Start broadcasting transactions
        vm.startBroadcast(deployerPrivateKey);

        // Get the instance of the deployed TraitsManagerV2 contract
        CryptoDadsOnchain traitsManager = CryptoDadsOnchain(nftContractAddress);

        // Loop through the arrays and define each trait
        for (uint256 i = 0; i < traitIds.length; i++) {
            uint256 traitId = traitIds[i];
            bytes32 key = keys[i];
            bytes32 value = values[i];

            // Call the defineTrait function on TraitsManagerV2
            traitsManager.defineTrait(traitId, key, value);

            // Log the defined trait
            console.log("Defined Trait:", traitId, string(abi.encodePacked(key)), string(abi.encodePacked(value)));
        }

        // Stop broadcasting transactions
        vm.stopBroadcast();
    }
}
